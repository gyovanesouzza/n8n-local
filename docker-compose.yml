
volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  redis_storage: 

networks:
  n8n-public:
    driver: bridge
  n8n-internal:
    driver: bridge

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    - OLLAMA_HOST=ollama:11434
    - N8N_SECURE_COOKIE=false
    - N8N_HOST=0.0.0.0
    - N8N_PORT=5678
    - WEBHOOK_URL=${URL}
    
  env_file:
    - env/.env
  volumes:
    - n8n_storage:/home/node/.n8n
    - ./n8n/n8n-vol:/n8n-vol
    - ./shared:/data/shared

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  container_name: ollama-pull-llama
  restart: unless-stopped
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  environment:
    - OLLAMA_HOST=ollama:11434
  command:
    - "-c"
    - "sleep 3; ollama pull llama3.2"

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks:
      - n8n-internal
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - n8n-internal
    restart: unless-stopped
    volumes:
      - redis_storage:/data
    env_file:
    - env/.env
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--save", "60", "1", "--loglevel", "warning"]
    
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks:
      - n8n-internal
    restart: unless-stopped
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama
    networks:
      - n8n-internal

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    networks:
      - n8n-internal
    depends_on:
      - ollama-cpu

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    networks:
      - n8n-internal
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/n8n/n8n-cred/credentials && n8n import:workflow --separate --input=/n8n/n8n-cred/workflows"
    volumes:
      - ./n8n/n8n-vol:/n8n-vol
    depends_on:
      postgres:
        condition: service_healthy
      ollama-cpu:
        condition: service_started

  n8n:
    <<: *service-n8n
    container_name: n8n
    networks:
      - n8n-public
      - n8n-internal
    ports:
      - 5678:5678
    depends_on:
      postgres:
        condition: service_healthy
      ollama-cpu:
        condition: service_started


  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    networks:
      - n8n-public
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
